-- Generated by Oracle SQL Developer Data Modeler 24.3.1.347.1153
--   at:        2025-01-18 15:26:27 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE departments (
    department_id            INTEGER NOT NULL,
    name                     CHAR(100) NOT NULL,
    employees_employee_id    INTEGER NOT NULL,
    university_university_id INTEGER NOT NULL,
    employees_employee_id2   INTEGER NOT NULL
);

CREATE UNIQUE INDEX departments__idx ON
    departments (
        employees_employee_id
    ASC );

CREATE UNIQUE INDEX departments__idxv1 ON
    departments (
        university_university_id
    ASC );

CREATE UNIQUE INDEX departments__idxv2 ON
    departments (
        employees_employee_id2
    ASC );

ALTER TABLE departments ADD CONSTRAINT departments_pk PRIMARY KEY ( department_id );

CREATE TABLE employees (
    employee_id               INTEGER NOT NULL,
    name                      CHAR(50) NOT NULL,
    surname                   CHAR(50),
    salary                    INTEGER,
    gender                    CHAR(1) NOT NULL,
    departments_department_id INTEGER NOT NULL,
    subjects_subject_id       INTEGER NOT NULL
);

CREATE UNIQUE INDEX employees__idx ON
    employees (
        departments_department_id
    ASC );

CREATE UNIQUE INDEX employees__idxv1 ON
    employees (
        subjects_subject_id
    ASC );

ALTER TABLE employees ADD CONSTRAINT employees_pk PRIMARY KEY ( employee_id );

CREATE TABLE grade_systems (
    grade_systems_id       NUMBER NOT NULL,
    majors_major_id        INTEGER NOT NULL,
    semestr_id             INTEGER NOT NULL,
    majors_majors_id       NUMBER NOT NULL,
    semesters_semesters_id NUMBER NOT NULL
);

CREATE UNIQUE INDEX grade_systems__idx ON
    grade_systems (
        majors_major_id
    ASC );

CREATE UNIQUE INDEX grade_systems__idxv1 ON
    grade_systems (
        majors_majors_id
    ASC );

CREATE UNIQUE INDEX grade_systems__idxv2 ON
    grade_systems (
        semesters_semesters_id
    ASC );

ALTER TABLE grade_systems ADD CONSTRAINT grade_systems_pk PRIMARY KEY ( grade_systems_id );

CREATE TABLE grades (
    students_student_id     INTEGER NOT NULL,
    grades_details_grade_id INTEGER NOT NULL,
    tests_test_id           INTEGER NOT NULL
);

CREATE TABLE grades_details (
    grade_id INTEGER NOT NULL,
    "DATE"   DATE NOT NULL,
    value    INTEGER
);

ALTER TABLE grades_details ADD CONSTRAINT grades_details_pk PRIMARY KEY ( grade_id );

CREATE TABLE groups (
    group_id              INTEGER NOT NULL,
    student_id            INTEGER NOT NULL,
    subjects_subject_id   INTEGER NOT NULL,
    employees_employee_id INTEGER NOT NULL
);

CREATE UNIQUE INDEX groups__idx ON
    groups (
        subjects_subject_id
    ASC );

ALTER TABLE groups ADD CONSTRAINT groups_pk PRIMARY KEY ( group_id );

CREATE TABLE majors (
    majors_id                      NUMBER NOT NULL,
    major_id                       INTEGER NOT NULL,
    name                           CHAR(100) NOT NULL,
    departments_department_id      INTEGER NOT NULL,
    student_limit                  INTEGER NOT NULL,
    grade_systems_grade_systems_id NUMBER NOT NULL
);

CREATE UNIQUE INDEX majors__idx ON
    majors (
        grade_systems_grade_systems_id
    ASC );

ALTER TABLE majors ADD CONSTRAINT majors_pk PRIMARY KEY ( majors_id );

ALTER TABLE majors ADD CONSTRAINT majors_major_id_un UNIQUE ( major_id );

CREATE TABLE semesters (
    semesters_id                   NUMBER NOT NULL,
    semestr_id                     INTEGER NOT NULL,
    subject_id                     INTEGER NOT NULL,
    grade_systems_grade_systems_id NUMBER NOT NULL
);

CREATE UNIQUE INDEX semesters__idx ON
    semesters (
        grade_systems_grade_systems_id
    ASC );

ALTER TABLE semesters ADD CONSTRAINT semesters_pk PRIMARY KEY ( semesters_id );

ALTER TABLE semesters ADD CONSTRAINT semesters_semestr_id_un UNIQUE ( semestr_id );

CREATE TABLE students (
    student_id           INTEGER NOT NULL,
    name                 CHAR(50),
    surname              CHAR(50),
    date_start           DATE,
    date_end             DATE,
    status               INTEGER,
    gender               CHAR(1) NOT NULL,
    semesters_semestr_id INTEGER NOT NULL,
    groups_group_id      INTEGER NOT NULL
);

CREATE UNIQUE INDEX students__idx ON
    students (
        groups_group_id
    ASC );

ALTER TABLE students ADD CONSTRAINT students_pk PRIMARY KEY ( student_id );

CREATE TABLE subjects (
    subject_id             INTEGER NOT NULL,
    group_id               INTEGER NOT NULL,
    ects_count             INTEGER,
    employees_employee_id  INTEGER NOT NULL,
    semesters_semestr_id   INTEGER NOT NULL,
    groups_group_id        INTEGER NOT NULL,
    employees_employee_id2 INTEGER NOT NULL
);

CREATE UNIQUE INDEX subjects__idx ON
    subjects (
        employees_employee_id
    ASC );

CREATE UNIQUE INDEX subjects__idxv1 ON
    subjects (
        employees_employee_id2
    ASC );

CREATE UNIQUE INDEX subjects__idxv2 ON
    subjects (
        groups_group_id
    ASC );

CREATE UNIQUE INDEX subjects__idxv3 ON
    subjects (
        semesters_semestr_id
    ASC );

ALTER TABLE subjects ADD CONSTRAINT subjects_pk PRIMARY KEY ( subject_id );

CREATE TABLE tests (
    test_id INTEGER NOT NULL,
    type    CHAR(20),
    "DATE"  DATE
);

ALTER TABLE tests ADD CONSTRAINT tests_pk PRIMARY KEY ( test_id );

CREATE TABLE university (
    university_id INTEGER NOT NULL,
    department_id INTEGER NOT NULL
);

ALTER TABLE university ADD CONSTRAINT university_pk PRIMARY KEY ( university_id );

ALTER TABLE departments
    ADD CONSTRAINT departments_employees_fkv2 FOREIGN KEY ( employees_employee_id2 )
        REFERENCES employees ( employee_id );

ALTER TABLE departments
    ADD CONSTRAINT departments_university_fk FOREIGN KEY ( university_university_id )
        REFERENCES university ( university_id );

ALTER TABLE employees
    ADD CONSTRAINT employees_departments_fk FOREIGN KEY ( departments_department_id )
        REFERENCES departments ( department_id );

ALTER TABLE employees
    ADD CONSTRAINT employees_subjects_fk FOREIGN KEY ( subjects_subject_id )
        REFERENCES subjects ( subject_id );

ALTER TABLE grade_systems
    ADD CONSTRAINT grade_systems_majors_fkv2 FOREIGN KEY ( majors_majors_id )
        REFERENCES majors ( majors_id );

ALTER TABLE grade_systems
    ADD CONSTRAINT grade_systems_semesters_fk FOREIGN KEY ( semesters_semesters_id )
        REFERENCES semesters ( semesters_id );

ALTER TABLE grades
    ADD CONSTRAINT grades_grades_details_fk FOREIGN KEY ( grades_details_grade_id )
        REFERENCES grades_details ( grade_id );

ALTER TABLE grades
    ADD CONSTRAINT grades_students_fk FOREIGN KEY ( students_student_id )
        REFERENCES students ( student_id );

ALTER TABLE grades
    ADD CONSTRAINT grades_tests_fk FOREIGN KEY ( tests_test_id )
        REFERENCES tests ( test_id );

ALTER TABLE groups
    ADD CONSTRAINT groups_employees_fk FOREIGN KEY ( employees_employee_id )
        REFERENCES employees ( employee_id );

ALTER TABLE groups
    ADD CONSTRAINT groups_subjects_fk FOREIGN KEY ( subjects_subject_id )
        REFERENCES subjects ( subject_id );

ALTER TABLE majors
    ADD CONSTRAINT majors_departments_fk FOREIGN KEY ( departments_department_id )
        REFERENCES departments ( department_id );

ALTER TABLE majors
    ADD CONSTRAINT majors_grade_systems_fk FOREIGN KEY ( grade_systems_grade_systems_id )
        REFERENCES grade_systems ( grade_systems_id );

ALTER TABLE semesters
    ADD CONSTRAINT semesters_grade_systems_fk FOREIGN KEY ( grade_systems_grade_systems_id )
        REFERENCES grade_systems ( grade_systems_id );

ALTER TABLE students
    ADD CONSTRAINT students_groups_fk FOREIGN KEY ( groups_group_id )
        REFERENCES groups ( group_id );

ALTER TABLE students
    ADD CONSTRAINT students_semesters_fk FOREIGN KEY ( semesters_semestr_id )
        REFERENCES semesters ( semestr_id );

ALTER TABLE subjects
    ADD CONSTRAINT subjects_employees_fkv2 FOREIGN KEY ( employees_employee_id2 )
        REFERENCES employees ( employee_id );

ALTER TABLE subjects
    ADD CONSTRAINT subjects_groups_fk FOREIGN KEY ( groups_group_id )
        REFERENCES groups ( group_id );

ALTER TABLE subjects
    ADD CONSTRAINT subjects_semesters_fk FOREIGN KEY ( semesters_semestr_id )
        REFERENCES semesters ( semestr_id );

DROP SEQUENCE grade_systems_grade_systems_id;
CREATE SEQUENCE grade_systems_grade_systems_id START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER grade_systems_grade_systems_id BEFORE
    INSERT ON grade_systems
    FOR EACH ROW
    WHEN ( new.grade_systems_id IS NULL )
BEGIN
    :new.grade_systems_id := grade_systems_grade_systems_id.nextval;
END;
/

DROP SEQUENCE majors_majors_id_seq;
CREATE SEQUENCE majors_majors_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER majors_majors_id_trg BEFORE
    INSERT ON majors
    FOR EACH ROW
    WHEN ( new.majors_id IS NULL )
BEGIN
    :new.majors_id := majors_majors_id_seq.nextval;
END;
/

DROP SEQUENCE semesters_semesters_id_seq;
CREATE SEQUENCE semesters_semesters_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER semesters_semesters_id_trg BEFORE
    INSERT ON semesters
    FOR EACH ROW
    WHEN ( new.semesters_id IS NULL )
BEGIN
    :new.semesters_id := semesters_semesters_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report:
--
-- CREATE TABLE                            12
-- CREATE INDEX                            16
-- ALTER TABLE                             32
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          3
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
--
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
--
-- REDACTION POLICY                         0
--
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
--
-- ERRORS                                   0
-- WARNINGS                                 0
